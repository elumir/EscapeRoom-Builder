-- =============================================
--  Escape Builder - MySQL Database Schema
-- =============================================
--
-- This script sets up the necessary database table for the application.
-- It assumes you have a database created and selected (e.g., via a `USE my_database;` command).
--
-- Database: The database name is configured in the .env file (DB_NAME).
-- Character Set: utf8mb4 is recommended for full Unicode support.
--

-- --------------------------------------------------------

--
-- Table structure for table `presentations`
--
-- This table stores all the presentation data. The core of the presentation,
-- including all rooms, objects, and puzzles is stored as a single JSON object
-- in the `data` column. Media assets (images, sounds) are stored in the
-- `assets` table and referenced by their ID.
--

CREATE TABLE IF NOT EXISTS `presentations` (
  `id` VARCHAR(36) NOT NULL COMMENT 'Primary Key, UUID generated by the application frontend.',
  `title` VARCHAR(255) NOT NULL COMMENT 'The title of the presentation for easy identification in the UI.',
  `data` JSON NOT NULL COMMENT 'A JSON object containing the complete presentation data structure.',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Timestamp of when the presentation record was created.',
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp of the last update to the presentation record.',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Indexes for table `presentations`
--
-- An index on `updated_at` is useful for quickly sorting presentations
-- by the most recently modified, which is the default sorting on the dashboard.
--
ALTER TABLE `presentations`
  ADD INDEX `idx_updated_at` (`updated_at` DESC);
  
-- --------------------------------------------------------

--
-- Table structure for table `assets`
--
-- This table stores binary assets like images and audio files. Storing these
-- outside of the main presentation JSON is critical for performance, as it keeps
-- the main data payload small and allows browsers to cache media assets efficiently.
--

CREATE TABLE IF NOT EXISTS `assets` (
  `id` VARCHAR(36) NOT NULL COMMENT 'Primary Key, UUID generated by the server.',
  `presentation_id` VARCHAR(36) NOT NULL COMMENT 'Foreign key linking the asset to a presentation.',
  `name` VARCHAR(255) NOT NULL COMMENT 'The original filename of the asset.',
  `mime_type` VARCHAR(100) NOT NULL COMMENT 'The MIME type of the file (e.g., image/jpeg).',
  `data` LONGBLOB NOT NULL COMMENT 'The raw binary data of the file.',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Timestamp of when the asset was uploaded.',
  PRIMARY KEY (`id`),
  KEY `idx_presentation_id` (`presentation_id`),
  CONSTRAINT `fk_asset_presentation` FOREIGN KEY (`presentation_id`) REFERENCES `presentations` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
